!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/nfs/homes/ulayus/0cursus/cub3D/srcs/parsing/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
add_strs_back	get_map.c	/^char	**add_strs_back(char *to_add, char	**strs)$/;"	f	typeref:typename:char **
atoi_protect	atoi_protect.c	/^long long	atoi_protect(char *str)$/;"	f	typeref:typename:long long
check_config	map_check.c	/^int	check_config(t_texture *config, char *tmp, int fd)$/;"	f	typeref:typename:int
check_line_format	verif_map.c	/^static void	check_line_format(char *line, int max_length)$/;"	f	typeref:typename:void	file:
configuration	map_check.c	/^void	configuration(int fd, t_texture *config)$/;"	f	typeref:typename:void
convert_str_rgb_to_int	texture_utils.c	/^int	convert_str_rgb_to_int(char **colors, t_texture config, char *buf, int fd)$/;"	f	typeref:typename:int
copy_map	get_map.c	/^char	**copy_map(int fd, char *first_line)$/;"	f	typeref:typename:char **
copy_path_texture	map_check.c	/^int	copy_path_texture(char **config_texture, char *buf)$/;"	f	typeref:typename:int
extension_check	extension.c	/^void	extension_check(char *av)$/;"	f	typeref:typename:void
free_texture_exit	texture_utils.c	/^void	free_texture_exit(t_texture config, char *buf, int fd)$/;"	f	typeref:typename:void
get_color	map_check.c	/^void	get_color(t_texture *config, char *buf, char way, int fd)$/;"	f	typeref:typename:void
get_map	get_map.c	/^void	get_map(t_texture *config, char *buf, int fd)$/;"	f	typeref:typename:void
init_texture	texture_utils.c	/^t_texture	init_texture(void)$/;"	f	typeref:typename:t_texture
map_check	map_check.c	/^void	map_check(char	*av, t_texture *config)$/;"	f	typeref:typename:void
max_line_length	verif_map.c	/^static int	max_line_length(char **map)$/;"	f	typeref:typename:int	file:
parsing	parsing.c	/^void	parsing(int ac, char **av, t_texture *config)$/;"	f	typeref:typename:void
print_error_exit	extension.c	/^void	print_error_exit(char *error)$/;"	f	typeref:typename:void
verif_map	verif_map.c	/^void	verif_map(t_texture *config)$/;"	f	typeref:typename:void
